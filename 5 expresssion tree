#include<iostream>
#include<stack>
#include<string>
using namespace std;
struct node
{ 
	char data;
	node *left,*right;
};
class tree
{
	public:
	node *root,*nnode;
	stack<node*>s1;
	void creation()
	{
		string exp;
		cout<<"\n Enter the prefix expression : ";
		int n;
		cin>>exp;
		n=exp.length();
		for(int i=n-1;i>=0;i--)
		{
			char ch;
			ch=exp[i];
			nnode=new node();
			nnode->left=nnode->right=NULL;
			nnode->data=ch;
			if( (ch>=97 && ch<=122 ) || (ch>=65 && ch<=91 ) )
			{
				s1.push(nnode);

			}
			else
			{

				nnode->left=s1.top();
				s1.pop();
				nnode->right=s1.top();
				s1.pop();
				cout<<nnode->data;
				s1.push(nnode);
			}
		}
	}
	void display(node* temp)
	{
		if( temp!=NULL)
		{
			display(temp->left);
			display(temp->right);
			cout<<" '"<<temp->data<<"' ";
		}
	}
	void deleteTree(node *root) 
	{
        if (!root) return;

        
        deleteTree(root->left);
        deleteTree(root->right);

        
        delete root;
    }

    void deleteTree()
	{
        deleteTree(root);
        root = NULL; 
        cout << "\nTree deleted successfully." << endl;
    }
};
int main()
{ 
    tree ob;
	ob.creation();
	if (!ob.s1.empty())
	{
		ob.root=ob.s1.top();
		ob.s1.pop();
		ob.display(ob.root);
	}
	
	ob.deleteTree();
	return 0;
	
}
